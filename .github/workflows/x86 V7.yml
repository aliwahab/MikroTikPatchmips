name: Patch x86 V7

on:
  workflow_dispatch:
    inputs:
      custom_version:
        description: "Masukkan versi RouterOS (misalnya: 7.18.2), atau biarkan kosong untuk versi terbaru"
        required: false
        default: ""

permissions:
  contents: write

env:
  MIKRO_LICENSE_PUBLIC_KEY: ${{ secrets.MIKRO_LICENSE_PUBLIC_KEY }}
  MIKRO_NPK_SIGN_PUBLIC_KEY: ${{ secrets.MIKRO_NPK_SIGN_PUBLIC_KEY }}
  CUSTOM_NPK_SIGN_PRIVATE_KEY: ${{ secrets.CUSTOM_NPK_SIGN_PRIVATE_KEY }}
  CUSTOM_NPK_SIGN_PUBLIC_KEY: ${{ secrets.CUSTOM_NPK_SIGN_PUBLIC_KEY }}
  CUSTOM_LICENSE_PRIVATE_KEY: ${{ secrets.CUSTOM_LICENSE_PRIVATE_KEY }}
  CUSTOM_LICENSE_PUBLIC_KEY: ${{ secrets.CUSTOM_LICENSE_PUBLIC_KEY }}

jobs:
  patch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y mkisofs xorriso qemu-utils extlinux --no-install-recommends
        sudo pip install -r requirements.txt

    - name: Get latest version or custom
      id: get_latest
      env:
        INPUT_VERSION: ${{ github.event.inputs.custom_version }}
      run: |
        echo $(uname -a)
        NEWEST=$(curl -s https://upgrade.mikrotik.com/routeros/NEWESTa7.stable)

        if [ -n "$INPUT_VERSION" ]; then
          LATEST_VERSION="$INPUT_VERSION"
        else
          LATEST_VERSION=$(echo "$NEWEST" | cut -d' ' -f1)
        fi

        BUILD_TIME=$(echo "$NEWEST" | cut -d' ' -f2)

        echo "Latest Version: $LATEST_VERSION"
        echo "Build Time: $BUILD_TIME"

        _LATEST_VERSION=$(cat latest7.txt | cut -d ' ' -f1)
        if [ "$_LATEST_VERSION" == "$LATEST_VERSION" ]; then
          echo "No new version found"
          echo "has_new_version=false" >> $GITHUB_OUTPUT
          exit 0
        fi

        echo "has_new_version=true" >> $GITHUB_OUTPUT
        curl -s -o CHANGELOG https://upgrade.mikrotik.com/routeros/$LATEST_VERSION/CHANGELOG
        cat CHANGELOG

        echo "NEWEST=${NEWEST}" >> $GITHUB_ENV
        echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV

        if [ "${{ matrix.arch }}" == "x86" ]; then
          ARCH=''
        elif [ "${{ matrix.arch }}" == "arm" ]; then
          ARCH='-arm'
        elif [ "${{ matrix.arch }}" == "arm64" ]; then
          ARCH='-arm64'
        elif [ "${{ matrix.arch }}" == "mipsbe" ]; then
          ARCH='-mipsbe'
        elif [ "${{ matrix.arch }}" == "mmips" ]; then
          ARCH='-mmips'
        elif [ "${{ matrix.arch }}" == "smips" ]; then
          ARCH='-smips'
        elif [ "${{ matrix.arch }}" == "tile" ]; then
          ARCH='-tile'
        elif [ "${{ matrix.arch }}" == "ppc" ]; then
          ARCH='-ppc'
        fi

        echo "ARCH=$ARCH" >> $GITHUB_ENV
